###* variables
# PKGBUILDUP_LOG="./pkgbuildup_result.log"
# INTEGRITY_CHECK="md5"
# IGNORE_WARN="t"
# DOWNLOAD_OVERWRITE="false"
UPLOAD_CMD="burp -kv %s"

deepin_pkgsite="http://packages.linuxdeepin.com"
# deepin_pkgsite="http://mirrors.ustc.edu.cn" # candidate server
tplname="PKGBUILD.tpl"

###* functions

# variable $tplfile, $pkgverreg, $pkgrelreg, $makepkg and $upload will
# be used, besides, if $FILE_INFO is empty, $pkgname, $url and $filereg
# will be used
update_pkgbuild_for_deepin() {
    local pkgname=$1
    abort_if_var_empty "${pkgname}" "pkgname"
    msg "Package name: ${pkgname}"

    # build default $FILE_INFO which own one file
    if [ -z "${FILE_INFO}" ]; then
        local url=${url:-"${deepin_pkgsite}/deepin/pool/main/d/${pkgname}"}
        local filereg=${filereg:-"${pkgname}_.*?\.tar.gz"}
        local FILE_INFO=("fileurl::md5::${url}::${filereg}")
    fi

    local tplfile=${tplfile:-"./${pkgname}/${tplname}"}
    local pkgverreg=${pkgverreg:-"git[^~_.-]*"}
    local pkgrelreg=${pkgrelreg:-""} # ignore this argument

    # TODO
    # local makepkg=${makepkg:-"true"}
    # local upload=${upload:-"true"}

    # local makepkg="false"
    local makepkg=${makepkg:-"true"}
    # local upload="false"
    local upload=${upload:-"true"}

    update_pkgbuild_for_source_site "${tplfile}" "${pkgverreg}" "${pkgrelreg}" "${makepkg}" "${upload}"
}

update_local_git() {
    git add -u .
    git commit -m "Update by pkgbuildup"
}

###* Test
# (
#     local url="${deepin_pkgsite}/deepin/pool/main/c/compiz"
#     local filereg="compiz_.*?\.tar.gz"
#     local makepkg="false"
#     local upload="false"
#     update_pkgbuild_for_deepin "deepin-compiz"
# )
# (
#     local url="${deepin_pkgsite}/deepin/pool/main/g/gnome-settings-daemon"
#     local filereg="gnome-settings-daemon_.*?\.tar.gz"
#     # local upload="false"
#     update_pkgbuild_for_deepin "deepin-gnome-settings-daemon"
# )

#(
    ##local filereg="deepin-ui_\d\.\d.*?\.tar.gz"
    ##local pkgverreg="[^-]*~[a-z0-9]+"
    #update_pkgbuild_for_deepin "deepin-ui"
#)

#update_pkgbuild_for_deepin "deepin-desktop-environment"
(
    local pkgverreg="\d{2}\.\d{2}\.\d{2}"
    update_pkgbuild_for_deepin "deepin-icon-theme"
)
exit

###* Package in ready

(
    local upload="false"
    update_pkgbuild_for_deepin "deepin-gtk-theme"
)

# (
#     local url="${deepin_pkgsite}/deepin/pool/main/g/gnome-settings-daemon"
#     local filereg="gnome-settings-daemon_.*?\.tar.gz"
#     update_pkgbuild_for_deepin "deepin-gnome-settings-daemon"
# )

###* Main loop
(
    local pkgverreg="\d{2}\.\d{2}\.\d{2}"
    update_pkgbuild_for_deepin "deepin-artwork"
)

(
    local pkgverreg="[0-9]{2}[^_-]*"
    update_pkgbuild_for_deepin "deepin-cursor-theme"
)

update_pkgbuild_for_deepin "deepin-desktop-environment"
update_pkgbuild_for_deepin "deepin-desktop-environment-plugins"
update_pkgbuild_for_deepin "deepin-game-center"
update_pkgbuild_for_deepin "deepin-icon-theme"
update_pkgbuild_for_deepin "deepin-media-player"
update_pkgbuild_for_deepin "deepin-music-player"
update_pkgbuild_for_deepin "deepin-notifications"
update_pkgbuild_for_deepin "deepin-screenshot"

(
    local pkgverreg="\d+\.\d+"
    update_pkgbuild_for_deepin "deepin-session"
)
update_pkgbuild_for_deepin "deepin-system-settings"
update_pkgbuild_for_deepin "deepin-system-tray"
update_pkgbuild_for_deepin "deepin-terminal"
update_pkgbuild_for_deepin "deepin-ui"
update_pkgbuild_for_deepin "deepin-wallpapers"
(
    local makepkg="false"
    update_pkgbuild_for_deepin "deepin-webkit"
)
(
    local filereg="deepin-webapps_.*?\.tar.xz"
    local pkgverreg="[0-9]+\.[0-9]+[^-_.]*"
    update_pkgbuild_for_deepin "deepin-webapps"
)

(
    local url="${deepin_pkgsite}/deepin/pool/main/d/deepin-xrandr"
    local filereg="deepin-xrandr_.*?\.tar.gz"
    update_pkgbuild_for_deepin "python2-deepin-xrandr"
)

(
    local url="${deepin_pkgsite}/deepin/pool/main/p/python-deepin-lunar"
    local filereg="python-deepin-lunar_.*?\.tar.gz"
    local pkgverreg="\d+\.\d+\.\d+"
    update_pkgbuild_for_deepin "python2-deepin-lunar"
)

(
    local url="${deepin_pkgsite}/deepin/pool/main/d/dtk-widget"
    local filereg="dtk-widget_.*?\.tar.gz"
    update_pkgbuild_for_deepin "libdtk-widget"
)

(
    local url="${deepin_pkgsite}/deepin/pool/main/d/dtk-widget"
    local filereg="dtk-widget_.*?\.tar.gz"
    update_pkgbuild_for_deepin "python2-libdtk-widget"
)

(
    local url="${deepin_pkgsite}/deepin/pool/main/p/pystorm/"
    local filereg="pystorm_.*?\.tar.gz"
    update_pkgbuild_for_deepin "python2-deepin-storm"
)

(
    local url="${deepin_pkgsite}/deepin/pool/main/p/pypulseaudio"
    local filereg="pypulseaudio_.*?\.tar.gz"
    update_pkgbuild_for_deepin "python2-deepin-pulseaudio"
)

# TODO deepin-pygtk-fix
# TODO deepin-vte-plus

#update_local_git

# Local Variables:
# mode: sh
# mode: orgstruct
# End:
