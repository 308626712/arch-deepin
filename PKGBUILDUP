###* variables
# PKGBUILDUP_LOG="./pkgbuildup_result.log"
# INTEGRITY_CHECK="md5"
# IGNORE_WARN="t"
# DOWNLOAD_OVERWRITE="false"
UPLOAD_CMD="burp -kv %s"

deepin_pkgsite="http://packages.linuxdeepin.com"
# deepin_pkgsite="http://mirrors.ustc.edu.cn" # candidate server
tplname="PKGBUILD.tpl"

###* functions

# variable $tplfile, $pkgverreg, $pkgrelreg, $makepkg and $upload will
# be used, besides, if $FILE_INFO is empty, $pkgname, $url and $filereg
# will be used
update_pkgbuild_for_deepin() {
    local pkgname=$1
    abort_if_var_empty "${pkgname}" "pkgname"
    msg "Package name: ${pkgname}"

    # build default $FILE_INFO which own one file
    if [ -z "${FILE_INFO}" ]; then
        local url=${url:-"${deepin_pkgsite}/deepin/pool/main/d/${pkgname}"}
        local filereg=${filereg:-"${pkgname}_.*?\.tar.gz"}
        local FILE_INFO=("fileurl::md5::${url}::${filereg}")
    fi

    local tplfile=${tplfile:-"./${pkgname}/${tplname}"}
    local pkgverreg=${pkgverreg:-"git[^_.-]*"}
    local pkgrelreg=${pkgrelreg:-""} # ignore this argument

    # TODO
    # local makepkg=${makepkg:-"true"}
    # local upload=${upload:-"true"}

    # local makepkg="false"
    local makepkg="true"
    local upload="false"
    # local upload="true"

    update_pkgbuild_for_source_site "${tplfile}" "${pkgverreg}" "${pkgrelreg}" "${makepkg}" "${upload}"
}

update_local_git() {
    git add -u .
    git commit -m "Update by pkgbuild_update"
}

###* Main loop
# (
#     local pkgverreg="\d{2}\.\d{2}\.\d{2}"
#     update_pkgbuild_for_deepin "deepin-artwork"
# )

# (
#     local pkgverreg="[0-9]{2}[^_-]*"
#     update_pkgbuild_for_deepin "deepin-cursor-theme"
# )

# update_pkgbuild_for_deepin "deepin-desktop-environment"
# update_pkgbuild_for_deepin "deepin-desktop-environment-plugins"
# update_pkgbuild_for_deepin "deepin-media-player"
# update_pkgbuild_for_deepin "deepin-music-player"
# update_pkgbuild_for_deepin "deepin-notifications"
# update_pkgbuild_for_deepin "deepin-screenshot"
update_pkgbuild_for_deepin "deepin-system-settings"
# update_pkgbuild_for_deepin "deepin-system-tray"
# update_pkgbuild_for_deepin "deepin-terminal"
# update_pkgbuild_for_deepin "deepin-ui"
# update_pkgbuild_for_deepin "deepin-wallpapers"

# (
#     local pkgverreg="[0-9]+\.[0-9]+[^-_.]*"
#     update_pkgbuild_for_deepin "deepin-webapps"
# )

# (
#     local url=${url:-"${deepin_pkgsite}/deepin/pool/main/d/deepin-xrandr"}
#     local filereg="deepin-xrandr_.*?\.tar.gz"
#     update_pkgbuild_for_deepin "python2-deepin-xrandr"
# )

# TODO deepin-pygtk-fix
# TODO deepin-vte-plus

# update_local_git

# Local Variables:
# mode: sh
# mode: orgstruct
# End:
